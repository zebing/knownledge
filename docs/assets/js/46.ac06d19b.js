(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{442:function(e,t,r){"use strict";r.r(t);var a=r(56),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"vue-2-0"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue-2-0"}},[e._v("#")]),e._v(" vue 2.0")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/",target:"_blank",rel:"noopener noreferrer"}},[e._v("参考文档"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("a",{attrs:{href:"https://www.bookstack.cn/read/vue-analysis/readme.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue 源码解析"),r("OutboundLink")],1)]),e._v(" "),r("p",[r("a",{attrs:{href:"https://naotu.baidu.com/file/68cd13ffa495fc762bd5a9a2877c4087?token=fe3dd3920efe4628",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue 源码解析脑图 "),r("OutboundLink")],1)]),e._v(" "),r("h2",{attrs:{id:"如何重写数组方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何重写数组方法"}},[e._v("#")]),e._v(" 如何重写数组方法")]),e._v(" "),r("p",[e._v("arrayMethods 首先继承了 Array，然后对数组中所有能改变数组自身的方法，如 push、pop 等这些方法进行重写。重写后的方法会先执行它们本身原有的逻辑，并对能增加数组长度的 3 个方法 push、unshift、splice 方法做了判断，获取到插入的值，然后把新添加的值变成一个响应式对象，并且再调用 ob.dep.notify() 手动触发依赖通知，这就很好地解释了之前的示例中调用 vm.items.splice(newLength) 方法可以检测到变化。")]),e._v(" "),r("p",[r("strong",[e._v("参考")])]),e._v(" "),r("p",[r("a",{attrs:{href:"https://ustbhuangyi.github.io/vue-analysis/v2/reactive/questions.html#%E5%AF%B9%E8%B1%A1%E6%B7%BB%E5%8A%A0%E5%B1%9E%E6%80%A7",target:"_blank",rel:"noopener noreferrer"}},[e._v("重写数组"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);